[tool:pytest]
# CI/CD friendly pytest configuration
# This configuration is designed for headless environments

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=threepanewindows
    --cov-report=term-missing
    --cov-report=xml:coverage.xml
    --cov-fail-under=70
    --maxfail=5

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    gui: marks tests that require GUI (may be skipped in headless)
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    visual: marks tests that require visual inspection
    timeout: marks tests with timeout requirements

# Timeout settings (if pytest-timeout is available)
timeout = 300
timeout_method = thread

# Coverage settings
[coverage:run]
source = threepanewindows
omit = 
    */tests/*
    */test_*
    setup.py
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod